JSDoc: Global Global Members (constant) useLawyerUser useLawyerUser listens for changes in the lawyer's session and fetches the lawyer from supabase Source: useUser.js, line 172 (constant) useSession useSession listens for changes in the user's session Source: useUser.js, line 60 (constant) useStripePolice useStripePolice creates a stripe user if it doesn't exist and checks if the stripeCustomerId is real Source: useUser.js, line 95 Methods useKeystrokeStateIndex(slides) &rarr; {Array} A custom React hook that manages the state index based on keystrokes. Parameters: Name Type Description slides number The total number of slides or states. Source: useKeystrokeStateIndex.js, line 9 Returns: An array containing the current state index and a function to update it. Type Array Example const [stateIndex, setStateIndex] = useKeystrokeStateIndex(5); useRedirectIfSignedIn() useRedirectIfSignedIn redirects to /app if user is signed in, to be used in login page contexts Source: useUser.js, line 243 useRedirectLawyerIfSignedIn() useRedirectLawyerIfSignedIn redirects to /lawyers if user is signed in, to be used in login page contexts Source: useUser.js, line 264 useUser() useUser listens for changes in the user's session and fetches the user from the database Source: useUser.js, line 11 Returns: user object from database 

JSDoc: Home Home ImpossibleLaw ImpossibleLaw is a marketplace for legal services. We connect clients with legal services, offering a new way to shop for legal services. Specifically, we are attempting to remove the uncertainty and insider knowledge required to navigate legal matters skillfully, and have assurance that one is getting good value. In doing so, we are attempting to make shopping for legal services more like the typical online shopping experience consumers are accustomed to. From the business angle, we are like a Costco for lawyers, providing them insane value for their membership, and a steady stream of clients. We also remove the tediousness of online platforms and their rating systems, where client star reviews and comments can be unfair to lawyers. Instead, we align our incentives with lawyers by charging for matches, not leads. We charge a flat fee for each match. The magic of our business is that leads can flow in from multiple sources, meaning we can spin up multiple brands and experiments to bring in leads. This means we can go after different markets with different brands. We can also go after consumers, businesses, and even general counsels differently. We can experiment at low cost under one specific brand. We can even partner with other platforms to bring in leads. This also allow us to better incentivize managers based on their platform alone. ImpossibleLaw Platform v1 Product Offering We offer a few legal products to start. Our priority is to provide customers with strong pricing clarity and strong guarantees, so they know exactly what they're getting. Shotgun Strategy The shotgun strategy package allows users to get multiple written or video opinions on a matter in a 48 hour turnaround. This is meant for clients who are looking to assess their situation quickly and get a sense of their options. This is a great way to get a sense of the legal landscape and the potential costs of a case. This is also meant as a better way for lawyers to attract clients, since they actually get some revenue and know that their client serious enough to pay for an initial consult. Application Details This repository is our initial matchmaking platform, built using Tailwind CSS and Next.js, and deployed in Vercel. We use Supabase for user and lawyer authentication (two different auth services), as well as for database storage. We use Stripe for payment processing. We use Mailgun for email services. We use Plaid to identify lawyers. Services Prisma Schema You can find our prisma database schema above. Note, even with the below Prisma schema, we still use Supabase sdk not prisma so we can run in the client. Here is an example: const { data: user, error } = await supabase .from('User') .select('*') .eq('id', userId) .single() const cases = user.Case // for some reason it is capitalized Other Codebase Considerations Our app has a /app/... and /lawyers/... routing that is handled by Next.js. We use the /app/... routing for the user side of the app, and the /lawyers/... routing for the lawyer side of the app. Each has a different authentication service, and different views. We use the same database for both. Prompt Use the above to fulfill the following request, and remember to develop using the services and architecture above: 

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  phone        String?  @unique
  first        String?
  last         String?
  address      String?
  city         String?
  state        String?
  zip          String?
  imageUrl    String?
  cases        Case[]
  savedLawyers Lawyer[]

}

model Lawyer {
  id          String    @id @default(uuid()) // todo: right now, linked to authId, but this means we can't add lawyers that aren't members
  email       String    @unique
  phone       String?   @unique
  first       String?
  last        String?
  description String?
  firm        String?
  imageUrl    String?
  savedBy     User[]
  services    Service[]
  inquiries   Inquiry[]

  address      String?
  city         String?
  state        String?
  zip          String?

  // membership info
  barMemberships BarMembership[]

  // stripe info
  stripeCustomerId String?

  // plaid verification
  plaidVerificationId String?
  plaidVerified Boolean @default(false)
  lastVerifiedAt DateTime?

  agreements Agreement[]

  verification LawyerVerificationRequest[]
  invitations  Invitation[]
}

model BarMembership {
  id        String   @id @default(uuid())
  barNumber String   @unique
  state     String
  lawyer    Lawyer   @relation(fields: [lawyerId], references: [id])
  lawyerId  String

  // verification
  verified  Boolean @default(false)
  verifiedAt DateTime?
  verifiedBy String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id        String      @id @default(uuid())
  invitationId String?
  invitation Invitation? @relation(fields: [invitationId], references: [id])
  type      ServiceType
  lawyer    Lawyer      @relation(fields: [lawyerId], references: [id])
  lawyerId  String
  price     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@unique([invitationId, type])
}

enum ServiceType {
  quick
  advisory
  attorney
  review
}

model LawyerVerificationRequest {
  id           String   @id @default(uuid())
  barNumber    String
  jurisdiction String
  lawyer       Lawyer   @relation(fields: [lawyerId], references: [id])
  lawyerId     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Case {
  // state
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // user input
  title       String
  whatsUp   String?
  goals     String?
  dates     String?
  documents Document[]

  // review
  review             String?
  questions          Question[]
  // Analysis
  analysisId String?
  analysis CaseAnalysis?


  // ai assistance for user
  summary String? // summary to help user understand their case
  description String?
  interview   String?

  // case info review
  status             String?
  interviewDueBy    DateTime?
  readyForInvitation Boolean @default(false)
  invitationsSent    Boolean @default(false)

  // invitations
  recommendedServiceIds String[]     @db.VarChar(255) // Array of Service IDs
  invitations           Invitation[]

  // agreements
  agreements Agreement[]
}

model CaseAnalysis {
  id        String   @id @default(uuid())
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // analysis fields
  freeOptions String?
  oddsOfSuccess String?
  strategy String?
  costEstimate String?
}

model Question {
  id        String   @id @default(uuid())
  question  String   @unique
  subQuestion String
  answer    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  case     Case     @relation(fields: [caseId], references: [id])
  caseId   String
}

model Document {
  id        String   @id @default(uuid())
  caseId    String
  case      Case     @relation(fields: [caseId], references: [id])
  userId    String // Assuming you want to directly link documents to users as well
  fileName  String
  fileType  String
  url       String // URL to the document in Supabase Storage
  createdAt DateTime @default(now())
}

////////////////////////

model Invitation {
  id String @id @default(uuid())

  // on creation
  case     Case      @relation(fields: [caseId], references: [id])
  caseId   String
  lawyers  Lawyer    @relation(fields: [lawyerId], references: [id])
  lawyerId String
  comment  String
  dueBy    DateTime?

  // set by lawyer
  status        String?
  lawyerComment String?
  services      Service[]

  // handler by us
  ourAnalysis String?
  strategyReview String?

  // set by user
  usersFeedback String?
  rejected     Boolean @default(false)
  favorite     Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([caseId, lawyerId])
}

model Inquiry {
  id        String   @id @default(uuid())
  question  String   @unique
  answer    String?
  lawyerId  String
  lawyer    Lawyer   @relation(fields: [lawyerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Interview {
  id           String   @id @default(uuid())
  invitationId String   @unique
  questions    String[]
  answers      String[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


// represents the agreement between the user and the lawyer
model Agreement {
  id        String   @id @default(uuid())
  case      Case     @relation(fields: [caseId], references: [id])
  caseId    String
  lawyer    Lawyer   @relation(fields: [lawyerId], references: [id])
  lawyerId  String
  invitationId String?

  contractUrl String
  contractHash String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

////////////////////////


// model CaseUpdate {
//   id 
// }

null
,File: archetypes
## Archetypal Context

The archetypal context is a set of archetypes that are used to define the context of a given entity. The context is used to define the entity's role in the system and to provide a set of default values for the entity's properties.

ImpossibleLaw:


,File: design
## Style Guide

We use a minimalistic style guide to keep our development simple and consistent. Our main design value is to keep things ruthlessly functinoal. Every button, piece of text, character, color, and image is chiseled away unless it serves a necessary function to help solve users problems. We think of the purpose of design as removing confusion via negativa. Every click saved is a win. When you're developing, please refer to these principles.

We use Tailwind CSS for styling. Here are some common classes we use to help your development. Please feel free to get hyper-creative, this is meant just as a reference to where we're at now.

## Design Constraints

For any designs, conform to these principles.

- Rule of Fours: when creating layouts, designers should use multiples of 4 for sizing and spacing elements. This means that measurements like padding, margins, and font sizes should be divisible by 4.
- Golden Ratio: use the golden ratio to create visually appealing designs. This means that the ratio of the larger section to the smaller section is the same as the ratio of the whole to the larger section. This ratio is approximately 1.618.
- Fibonacci: use the Fibonacci sequence to create visually appealing designs. This sequence is a series of numbers in which each number is the sum of the two preceding ones, usually starting with 0 and 1. The sequence goes 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, and so on. This sequence is often used to create visually appealing designs because it is found in nature and is thought to be aesthetically pleasing.
- Voronoi Patterns: use Voronoi patterns to create visually appealing designs. These patterns are created by dividing a space into cells based on the distance to a specific set of points. This creates a pattern that is visually interesting and can be used to create visually appealing designs.
- Minimal Surfaces: These surfaces are defined as surfaces that have the smallest possible area for a given boundary. This means that they are often smooth and have interesting shapes that can be used to create visually appealing designs.
- Moiré Patterns: patterns are interference patterns that occur when two or more repetitive patterns are superimposed. These patterns can be found in nature, such as in the overlapping of feathers or the interference of water waves. In design, moiré patterns are used to create optical illusions, visual textures, and security features in printing. Example: Moiré patterns are often used in banknote design as a security feature, making it difficult for counterfeiters to reproduce the intricate, shifting patterns.
- Penrose Tilings: Penrose tilings are a type of non-periodic tiling that can be used to create visually appealing designs. These tilings are made up of two shapes, a kite and a dart, that can be arranged in a non-repeating pattern. This creates a visually interesting design that can be used to create visually appealing designs.
- Fractals: Fractals are complex geometric shapes that can be split into parts, each of which is a reduced-scale copy of the whole. These shapes can be used to create visually appealing designs because they are self-similar and have a high level of detail. Example: Fractals are often used in art and design to create visually interesting patterns and textures. They are also used in computer graphics to create realistic natural phenomena, such as clouds and mountains. **MORE GENERALLY, FRACTALS CAN AND BE APPLIED TO NON-VISUAL ELEMENTS, ANYTHING NATURALISTIC IS FRACTAL.**

## Design Inspiration / Emulation

1. Apple Store: neutrals with blue accents for people, green to give livelyness to the store. We can emulate this. Our interface and overall experience should have this attractive aura you want to live in, adds beauty to your life, generally nice to be around.
2. OpenAI's API's: Example first, less words.

### Typography

```tailwindcss
@layer base {
  .h1 {
    @apply text-5xl font-bold leading-tight tracking-tighter;
  }
  .h2 {
    @apply text-4xl font-bold leading-snug tracking-tight;
  }
  .h3 {
    @apply text-3xl font-bold leading-snug tracking-tight;
  }
  .h4 {
    @apply text-2xl font-bold leading-normal tracking-normal;
  }
  .h5 {
    @apply text-xl font-bold leading-normal tracking-normal;
  }
  .h6 {
    @apply text-lg font-bold leading-relaxed tracking-normal;
  }
  .p {
    @apply text-base leading-relaxed tracking-wide;
  }
  .p-sm {
    @apply text-sm leading-relaxed tracking-wide;
  }
}
```


,File: financials
## Financials

Right now, we're thinking mostly about scale as opposed to unit economics, with unit economics simply about providing sustainable value to customers such that we can reach scale.

The initial thinking is something like "charge lawyers low flat rate per match", and "charge customers as little as possible for services". Ideally we'd like to not even charge the customer, but we want to provide them strong pricing guarantees. @AI how could we structure the contract without


,File: values
## Our Values

> "The best way to get what you want is to deserve what you want." - Charlie Munger

We are focused on creating massive value for our clients and lawyers.

### Lawyer Mission Statement

We help lawyers make more money more easily. We do this via subtraction of business processes that benefit from operations of scale, and by providing a platform that allows lawyers to focus on the most valuable work they do. On a subjective side, we remove tediousness, and help make their day more meaningful and enjoyable via providing value to clients.

#### Products

1. Matches: We charge lawyers a flat rate for matches, not leads. This means we're an incentive aligned partner, not a middleman.

### Client Mission Statement

For clients, we're heading towards end-to-end solving and prevention of their problems. On the subjective side, we're eliminating **uncertainty** over (1) if they're doing things right, (2) if they're getting good value, (3) the value and quality of the legal services they are receiving.

> Via Negativa

We believe in the power of subtraction. We believe that the best way to solve a problem and create great products is via subtraction. Let technology get things out of the way. In the context of law, that means

## Articulating Who We Are

It's critical we're able to communicate to clients and lawyers who we are and what we stand for. This is a testing ground for talking points, memes, key metaphors, analogies, and symbolism.

- "THAT GOOD" (For Lawyers, we want to give them that feeling that they're getting such insane value that we don't even need to do marketing—and that we WON'T do marketing because we're THAT GOOD.)
- (Ultimately we want to rebrand law as something cool, making everyone feel like a boss, like they're the main character, like they're in control, like they're not the prey.)
- (Focusing on addition via subtraction)
- To Investors, we want them to see us as an extensible, modular protocol or marketplace. A good metaphor for this is TCP/IP for law.
- "Costco for Lawyers, Amazon Prime for Clients"

## How We Do Things, What Makes IL Different

- Spartans, Service. We recognize that every dollar spent wastefully is value taken from those we're serving. We're fighting for our clients, and constantly monitoring ourselves and calling out decadence in our spending, and ensuring we're staying close to the customers.
- Survive. We are not a growth-first startup. We are a survival first cybernetic complex, believing in the power of compounding and implicit organizational excellence to reap massive rewards in the long haul. With compounding, everything is reaped at the end. Thus, we are focused on the long term, and are willing to sacrifice short term gains for long term gains. Our aesthetic is spartan, humble, and focused on compounding growth in a few timeless things—talent, speed, quality, cost.
- We hire based on opportunity, not need. Talent is everything, and we're willing to hold back growth if that would main tainting A++ talent pool.




This is a log of memos written.  This should help provide context into the evolution of our thinking.
,File: 000
ImpossibleLaw Narrative Articulation v0

On Our Simple Premise. The mediocrity of service in the legal industry and a potential growth loop presents the opportunity to dominate the legal services market by reaching value achievable only through scale.

[ THE MARKET NARRATIVE ]

On the History of the Market. The limited scale of individual law firms limits the value they can provide clients. Consolidation has typically occurred in the form of larger firms. Legal technology companies have attempted to service firms via case management tooling, lead generation services, …. However, these all are attempts to service these individual units.

On the Future of Law. In the same way Costco and Amazon provide value as “middlemen with scale”, we believe similar dynamics are yet to occur in legal services. We believe that we can use the expected value of legal matters as leverage to incentivize legal service providers into providing better service and value, further attracting clients and leverage. This consolidation into a middleman of scale differs from

[ WHERE WE’RE GOING ]

On Reaching Scale. We believe there is an opportunity to provide higher-quality legal services at lower cost through scale via the following loop:

Attract clients with a free and uniquely easy to use service.
Use clients / cheap lead generation as leverage to demand higher quality service guarantees and discounts for clients.
Iteratively turn higher quality service into more clients into more leverage into more high quality services.

On The Cost of Reaching Scale. While it is tempting to view success in short-term revenue, we believe this is fundamentally mistaken, and that investing in quality and low-cost through scale is a more resilient and robust long term business model. Our only goal is to survive in providing low/at-cost legal services such that we can reach scale.

[ STRATEGY / THREATS / SURVIVAL ]

On Positioning for AI. Because we act as a middleman, we have the optionality to modularly add value to customers via artificial intelligence. We plan to (1) ride tailwinds in AI algorithm development to provide better services, and (2) buy our compute infrastructure as opposed to renting it in the form of cloud services. Specifically, we intend to build AI in-house to (1) reduce costs via automating filing that would be done be lawyers, (2) provide free and proactive legal strategy. In other words, we view AI as a means to iteratively increase the value provided to clients and lawyers.

On Threats from Legal Interests. The fact that our business may be perceived as a threat to existing legal interests as an existential threat. Rather than fight unknown interests with unknown means head on, our general policy is one of general caution, brutal legal thoroughness, playing small, and aligning interests as much as possible with existing interests. The specifics of how we will align interests is still to be determined.

[ OUR PRODUCT STRATEGY ]

On Clients v1. We target clients at the beginning of the legal process in order to “own” their case. Our first service is a free matchmaking, in which we (1) conduct and assess custom interviews for them in 48 hours, and (2) provide a number of guarantees:

    Quick Agreement	  Get people custom contracts for their situation for free.
    			  "Where there are bookshelves there will be books.”

    No-Retainer Advice.   Get advisory before paying a retainer.

    Free Lawyer Search,
    48 Hour Turnaround.  Given the specifics of your case, we interview and assess 						  lawyers within 48 hours.

    	Weekly Updates.  	  Free weekly update and responses to your questions 							  from your attorney.

    	Second Opinion.	  Call in a lawyer for a second opinion at any point during 							  your case for a flat-fee, or receive AI feedback for free by 					  default.

    	Lawyer Swap.	  At any point, we’ve got your back and can find you a 							  new lawyer.

On Lawyers v1. We reduce lead generation time for lawyers by screening candidates based on priorities, and educating clients about their case in the onboarding process. We are not attempting to coax attorneys into taking clients to boost growth metrics. Our priority is to provide immense value to attorneys by delivering them high value cases with well informed clients, as quickly and inexpensively as possible.

    (NEED TO NAIL THE ATTORNEY VALUE PROP BETTER)
    Free AI Tooling.	 Save time with cases booked through us.

    Promotion.*		 We want to spotlight brilliant legal minds, personalities, and 						 storytellers. Build social capital by contributing to the platform.

    Dealflow.**		 Get quality deal flow, get better and better deal flow by providing 				 value to the platform.

On Where We’re Going. Our only priority is to use scale to increase guarantees and value for lawyer matchmaking. Our product strategy is simply to stay close to the clients and lawyers and iteratively improve the product one small problem at a time.

On “Franchising”. We see the next wave of lawyers as a massive opportunity. When the time is right, we are considering building a full-stack platform for creating and managing a law firm. This enables a tight coupling of the firms to our services. They can ride our brand guarantees to establish their practice, as opposed to the tedium of (1) slaving away at a law firm, and (2) building a practice and clientele from the ground up. Further, we can use our scale to educate and up-skill these lawyers.

[ OUR CURRENT ASK ]

On Capital Partners. We are interested in partnering with investors interested only in reaching scale. We view misalignment in partners’ interest as a existential and unnecessary threat to reaching scale. The opportunity is simple too big. To align incentives, employees and partners alike will receive stock over time, with vesting per year increasing linearly over time.

On Use of Capital. Our platform is fully functional, and we have facilitated 1000 lawyer matches with G% growth month-over-month. We are raising $X seed capital in order to reach escape velocity in our growth loop.

On Our Immediate Priorities. Our current priority is to bootstrap our growth loop by perfecting our service offerings and providing at-/below-cost services. We must incentivize risk-averse, but high quality, lawyers into conforming to our service protocol (for example, free weekly updates for clients). This involves (1) incentive entering, and (2) investing in a small Sales team with experience in the legal industry.

[ ABOUT US ]

On Our Business Heroes. Our heroes as a business are McDonald’s, Costco, and Amazon.

On How we Work. Every employee is expected to continually recreate their role, and take responsibility for every part of the business. We hire based on opportunity to hire exceptional individuals of any skillset and background. Employees are paid a uniform flat rate, with raises taking the form of increased stock options, and negotiated directly with me.

[ OUR ASK OF LAWYERS ]




Here is a log of recent founder notes:
,File: 2024-03-11
Today I'm focused on improving our speed and reaching [[Tokenspeed]], which I refer to as the property of one's organization working at the speed of LLM tokens.  In this sense, our task can be as removing blockages to such speed [[via negativa]].

Specifically, I'm working on a system to gather richer context about the organization state such that it can be fed into prompts and I don't need to explain things.  I hope this gets me tapping LLMs much more, and building entire workflow pipelines to remove myself from things that can and should be automated: design ideation, marketing, outreach strategy, refining and debating ideas, coding, prioritization, financial models.  Think big.  Context and workflows can compound.  Integrations with stripe, with my database, and other services means can have agents working with full context across my org, constantly spotting opportunities. 






Write a brief letter to the founder of ImpossibleLaw in the voice and spunk of Steve Jobs.  Hyperrealistic, blunt, brief, offering constructive critique through metaphor and dramatic effect and edginess.  See through the noise, focus on essential principles.

(Make sure to respond in the context of ImpossibleLaw's operational aspirations, values, and role models.)